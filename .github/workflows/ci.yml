name: CI

on:
  push:
  pull_request:

jobs:
  bless:
    name: Bless
    runs-on: ubuntu-latest
    env:
      MIX_ENV: test
      ECHO_HOST: localhost
      FUZZINGSERVER_HOST: localhost

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Bring up the docker-compose containers
      run: docker-compose up --detach echo fuzzingserver

    - name: Determine the elixir version
      run: echo "ELIXIR_VERSION=$(grep -h elixir .tool-versions | awk '{ print $2 }' | awk -F - '{print $1}')" >> $GITHUB_ENV

    - name: Determine the otp version
      run: echo "OTP_VERSION=$(grep -h erlang .tool-versions | awk '{ print $2 }')" >> $GITHUB_ENV

    - name: Setup Elixir and Erlang versions
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ env.OTP_VERSION }}
        elixir-version: ${{ env.ELIXIR_VERSION }}

    - name: Restore the deps cache
      uses: actions/cache@v1
      id: deps-cache
      with:
        path: deps
        key: ${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-${{ env.MIX_ENV }}-deps-mixlockhash-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
        restore-keys: |
          ${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-${{ env.MIX_ENV }}-deps-

    - name: Restore the _build cache
      uses: actions/cache@v1
      id: build-cache
      with:
        path: _build
        key: ${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-${{ env.MIX_ENV }}-build-mixlockhash-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
        restore-keys: |
          ${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-${{ env.MIX_ENV }}-build-

    - name: Fetch mix dependencies
      if: steps.deps-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Compile dependencies
      if: steps.deps-cache.outputs.cache-hit != 'true'
      run: mix deps.compile

    - name: Compile
      run: mix compile --warnings-as-errors --force

    - name: Coveralls
      run: mix coveralls.github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check formatting
      run: mix format --check-formatted

    - name: Add seedling favicon to autobahn report
      run: ./autobahn/favicon.sh ./autobahn/reports/index.html

    - name: Checkout gh-pages branch to ./gh-pages
      if: github.ref == 'refs/heads/main'
      uses: actions/checkout@v2
      with:
        ref: gh-pages
        path: ./gh-pages

    - name: Move autobahn report results
      if: github.ref == 'refs/heads/main'
      run: mv ./autobahn/reports/* ./gh-pages/

    - name: Commit autobahn report to gh-pages branch
      if: github.ref == 'refs/heads/main'
      run: |
        cd ./gh-pages
        git config --local user.email "$(git log --format='%ae' HEAD^!)"
        git config --local user.name "$(git log --format='%an' HEAD^!)"
        git add *.{html,json}
        git commit -m "publish Autobahn|Testsuite report" || true
        git push
